open System.IO

open Scraping.Props
open Scraping.Icons
open Scraping.ColorVariants
open Scraping.RenderDslCodeSnippets

let private generateScrapedDataFile (jsonScraperResult: string) (icons: string) (colorVariants: string) (renderDslSnippetDataResultEncoded: string) : unit =
    let source = String.concat "\n" [
        "(* AutoGenerated *)"
        "module AppEggShellGallery.ScrapedData"
        ""
        "open LibClient"
        "open LibClient.Icons"
        "open Scraping.Types"
        ""
        "module Props ="
        "  let private encodedData : string ="
        "      \"\"\""
        jsonScraperResult
        "      \"\"\""
        ""
        "  let propsDataResult: Result<ScrapeResult, string> = Json.FromString encodedData"
        ""
        "module Icons ="
        "  let iconsList: List<string * IconConstructor> = " + icons
        ""
        "module Colors ="
        "  let colorVariantsData: List<string * Variants> = " + colorVariants
        ""
        "module RenderDslSnippets ="
        "  let private encodedData:  string ="
        "      \"\"\""
        renderDslSnippetDataResultEncoded
        "      \"\"\""
        ""
        "  let renderDslSnippetDataResult : Result<Result<List<Snippet>, SnippetError>, string> = Json.FromString encodedData"
    ]

    use streamWriter = new StreamWriter("../src/ScrapedData.fs")
    streamWriter.WriteLine source

let private originalScraping () =
    let propsDataResult: string =
        // Not sure from where is this console app is going to be called. So, hard coding the path
        getPropsDataResult [
            "../../LibClient/src/Components/"
            "../../LibUiAdmin/src/Components/"
            "../../LibRouter/src/Components/"
            "../../ThirdParty/Map/src/Components/"
            "../../ThirdParty/Recharts/src/Components/"
            "../../ThirdParty/SyntaxHighlighter/src/Components/"
        ]
    let renderDslSnippetDataResultEncoded : string = getRenderDslSnippetDataResultEncoded ()
    generateScrapedDataFile propsDataResult icons colorVariants renderDslSnippetDataResultEncoded

[<EntryPoint>]
let main _ =
    Scraping.XmlDocs.scrapeDocsAndGenerateContentFiles ()
    0
