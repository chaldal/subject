<rt-root rt-type-parameters="'Item, 'QueryFormField, 'QueryAcc, 'Query">
    <div class='view {TopLevelBlockClass}'>
        <rt-match what='props.CustomRender'>
            <rt-case is='None'>
                {=form}

                {=grid}
            </rt-case>
            <rt-case is='Some customRender'>
                {=customRender (form, grid)}
            </rt-case>
        </rt-match>
    </div>

    <rt-let name='form'>
        <rt-match what="props.QueryForm">
            <rt-case is="Some queryForm">
                <LC.Form.Base
                 Accumulator='~ManageInternallyInitializingWith props.InitialQueryAcc'
                 Submit='actions.Submit'
                 rt-prop-children="Content(form: ~FormHandle&lt;'QueryFormField, 'QueryAcc, 'Query&gt;)">
                    <div class='query-block'>
                        {=queryForm form}
                    </div>
                    <LC.Buttons rt-fs='true' styles='[| QueryGridStyles.Styles.buttonsBlock |]' Align='~Left'>
                        <LC.Button
                         class='anitest'
                         Label='"Submit"'
                         State='^ form.TrySubmit'/>
                    </LC.Buttons>
                </LC.Form.Base>
            </rt-case>
            <rt-case is='None'/>
        </rt-match>
    </rt-let>

    <rt-let name='grid'>
        <div class='grid-block'>
			<rt-match what='props.HandheldRow'>
				<rt-case is='None'>
					<UiAdmin.Grid
					 Input='~Paginated (estate.GridData, (fun item -> props.Row (item, estate.MaybeCurrentQueryPage, actions.Refresh)), None)'
					 Headers='props.Headers'/>
				</rt-case>
				<rt-case is='Some handheldRow'>
					<UiAdmin.Grid
					 Input='~Paginated (estate.GridData, (fun item -> props.Row (item, estate.MaybeCurrentQueryPage, actions.Refresh)), Some (fun item -> handheldRow (item, estate.MaybeCurrentQueryPage, actions.Refresh)))'
					 Headers='props.Headers'/>
				</rt-case>
			</rt-match>
        </div>
    </rt-let>
</rt-root>
