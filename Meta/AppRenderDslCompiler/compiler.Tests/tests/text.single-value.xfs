module Components.TestRender

module FRH = Fable.React.Helpers
module FRP = Fable.React.Props
module FRS = Fable.React.Standard

open LibClient.RenderResultModule

open Components



open Components.Test



let render(props: Components.Test.Props, estate: Components.Test.Estate, pstate: Components.Test.Pstate, actions: Components.Test.Actions, __componentStyles: ReactXP.Styles.RuntimeStyles) : Fable.React.ReactElement =
    let __class = (ReactXP.Helpers.extractProp "ClassName" props) |> Option.defaultValue ""
    let __mergedStyles = ReactXP.Styles.Runtime.mergeComponentAndPropsStyles __componentStyles props
    let __parentFQN = None
    (
        if (true) then
            (
                let __list = [
                    (
                        FRS.div
                            []
                            (
                                let __list = [
                                    ((makeTextNode (System.String.Format("{0}", obj.field))) |> RenderResult.Make)
                                ]
                                __list |> RenderResult.ToRawElements __parentFQN
                            )
                    ) |> RenderResult.Make
                    (
                        FRS.div
                            []
                            (
                                let __list = [
                                    ((makeTextNode (System.String.Format("{0}", 42))) |> RenderResult.Make)
                                ]
                                __list |> RenderResult.ToRawElements __parentFQN
                            )
                    ) |> RenderResult.Make
                    (
                        FRS.div
                            []
                            (
                                let __list = [
                                    ((makeTextNode (System.String.Format("{0}", "lalala"))) |> RenderResult.Make)
                                ]
                                __list |> RenderResult.ToRawElements __parentFQN
                            )
                    ) |> RenderResult.Make
                    (
                        FRS.div
                            []
                            (
                                let __list = [
                                    ((makeTextNode "lalala") |> RenderResult.Make)
                                ]
                                __list |> RenderResult.ToRawElements __parentFQN
                            )
                    ) |> RenderResult.Make
                ]
                __list |> RenderResult.ToLeaves
            )
            |> RenderResult.Make
        else RenderResult.Nothing
    )
    |> RenderResult.ToRawElementsSingle __parentFQN |> RenderResult.ToSingleElement